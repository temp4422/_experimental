{
  "name": "my-app",
  "version": "1.0.0",
  "private": true,
  "description": "my app",
  "keywords": [
    "app"
  ],
  "author": "temp4422",
  "license": "MIT",
  "type": "module",
  "main": "main.js",
  "engines": {
    "npm": "^10",
    "node": "^22"
  },
  "packageManager": "npm@10.0.0",
  "scripts": {
    "dev": "browser-sync start --server 'dist/' --files 'src/' --port 3000 --no-open --no-notify & node watch.js",
    "dev:docker": "docker compose -f docker-compose.dev.yaml up --build --watch",
    "prebuild": "npm run lint && npm run format",
    "build": "node server.js && npx @tailwindcss/cli -i ./src/style.css -o ./dist/style.css",
    "start": "serve ./dist/",
    "start:docker": "docker compose up -d --build",
    "lint": "echo lint",
    "format": "npx prettier --write src/",
    "minify": "npx terser dist/server.js --module --ecma 2022 --compress drop_console=true --mangle --output dist/server.js",
    "lighthouse": "cd ./lighthouse/ && lighthouse http://localhost:3000 --quiet --chrome-flags='--headless'"
  },
  "dependencies": {
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "next": "15.1.7"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4.0.0",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.1.7",
    "postcss": "^8",
    "tailwindcss": "^4.0.0",
    "typescript": "^5"
  },
  "homepage": "https://github.com/temp4422/my-app#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/temp4422/my-app.git"
  },
  "bugs": {
    "url": "https://github.com/temp4422/my-app/issues"
  },
  "imports": {
    "#src/*": "./src/*",
    "#helper": "./src/utils/helper.js",
    "#//comment": "Now, anywhere in your package you can import the helper using: `import { someFunction } from '#helper'`. Allows you to create aliases or mappings so that when you import modules within your package, you can use these custom specifiers instead of relative or absolute paths. This keeps your import paths clean and maintainable."
  },
  "//comments": {
    "field1": "There is no restriction on what field names you can use. You can add any custom data you want.",
    "field2": "List of possible fields: https://docs.npmjs.com/cli/v11/configuring-npm/package-json",
    "field3": "Alternative TypeScript list: https://github.com/sindresorhus/type-fest/blob/91eb9df7b4930dd4f47a6565a4d843afaa0ec905/source/package-json.d.ts#L345"
  }
}
